{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "HandleMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "receive"
      ],
      "properties": {
        "receive": {
          "$ref": "#/definitions/Cw20ReceiveMsg"
        }
      }
    },
    {
      "description": "Owner operations ///",
      "type": "object",
      "required": [
        "update_config"
      ],
      "properties": {
        "update_config": {
          "type": "object",
          "properties": {
            "owner": {
              "anyOf": [
                {
                  "$ref": "#/definitions/HumanAddr"
                },
                {
                  "type": "null"
                }
              ]
            },
            "premium_min_update_interval": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "register_asset"
      ],
      "properties": {
        "register_asset": {
          "type": "object",
          "required": [
            "asset_token",
            "staking_token"
          ],
          "properties": {
            "asset_token": {
              "$ref": "#/definitions/HumanAddr"
            },
            "staking_token": {
              "$ref": "#/definitions/HumanAddr"
            }
          }
        }
      }
    },
    {
      "description": "User operations ///",
      "type": "object",
      "required": [
        "unbond"
      ],
      "properties": {
        "unbond": {
          "type": "object",
          "required": [
            "amount",
            "asset_token"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "asset_token": {
              "$ref": "#/definitions/HumanAddr"
            }
          }
        }
      }
    },
    {
      "description": "Withdraw pending rewards",
      "type": "object",
      "required": [
        "withdraw"
      ],
      "properties": {
        "withdraw": {
          "type": "object",
          "properties": {
            "asset_token": {
              "anyOf": [
                {
                  "$ref": "#/definitions/HumanAddr"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      }
    },
    {
      "description": "Provides liquidity and automatically stakes the LP tokens",
      "type": "object",
      "required": [
        "auto_stake"
      ],
      "properties": {
        "auto_stake": {
          "type": "object",
          "required": [
            "assets"
          ],
          "properties": {
            "assets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Asset"
              },
              "maxItems": 2,
              "minItems": 2
            },
            "slippage_tolerance": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      }
    },
    {
      "description": "Hook to stake the minted LP tokens",
      "type": "object",
      "required": [
        "auto_stake_hook"
      ],
      "properties": {
        "auto_stake_hook": {
          "type": "object",
          "required": [
            "asset_token",
            "prev_staking_token_amount",
            "staker_addr",
            "staking_token"
          ],
          "properties": {
            "asset_token": {
              "$ref": "#/definitions/HumanAddr"
            },
            "prev_staking_token_amount": {
              "$ref": "#/definitions/Uint128"
            },
            "staker_addr": {
              "$ref": "#/definitions/HumanAddr"
            },
            "staking_token": {
              "$ref": "#/definitions/HumanAddr"
            }
          }
        }
      }
    },
    {
      "description": "Permission-less operations ///",
      "type": "object",
      "required": [
        "adjust_premium"
      ],
      "properties": {
        "adjust_premium": {
          "type": "object",
          "required": [
            "asset_tokens"
          ],
          "properties": {
            "asset_tokens": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HumanAddr"
              }
            }
          }
        }
      }
    },
    {
      "description": "Mint contract operations ///",
      "type": "object",
      "required": [
        "increase_short_token"
      ],
      "properties": {
        "increase_short_token": {
          "type": "object",
          "required": [
            "amount",
            "asset_token",
            "staker_addr"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "asset_token": {
              "$ref": "#/definitions/HumanAddr"
            },
            "staker_addr": {
              "$ref": "#/definitions/HumanAddr"
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "decrease_short_token"
      ],
      "properties": {
        "decrease_short_token": {
          "type": "object",
          "required": [
            "amount",
            "asset_token",
            "staker_addr"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "asset_token": {
              "$ref": "#/definitions/HumanAddr"
            },
            "staker_addr": {
              "$ref": "#/definitions/HumanAddr"
            }
          }
        }
      }
    }
  ],
  "definitions": {
    "Asset": {
      "type": "object",
      "required": [
        "amount",
        "info"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "info": {
          "$ref": "#/definitions/AssetInfo"
        }
      }
    },
    "AssetInfo": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "token"
          ],
          "properties": {
            "token": {
              "type": "object",
              "required": [
                "contract_addr"
              ],
              "properties": {
                "contract_addr": {
                  "$ref": "#/definitions/HumanAddr"
                }
              }
            }
          }
        },
        {
          "type": "object",
          "required": [
            "native_token"
          ],
          "properties": {
            "native_token": {
              "type": "object",
              "required": [
                "denom"
              ],
              "properties": {
                "denom": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
    },
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Cw20ReceiveMsg": {
      "description": "Cw20ReceiveMsg should be de/serialized under `Receive()` variant in a HandleMsg",
      "type": "object",
      "required": [
        "amount",
        "sender"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "msg": {
          "anyOf": [
            {
              "$ref": "#/definitions/Binary"
            },
            {
              "type": "null"
            }
          ]
        },
        "sender": {
          "$ref": "#/definitions/HumanAddr"
        }
      }
    },
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "HumanAddr": {
      "type": "string"
    },
    "Uint128": {
      "type": "string"
    }
  }
}
